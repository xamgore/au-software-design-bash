package ru.xamgore.tasks;

import java.util.Map;

/**
 * Abstract task, which defines three important things.
 * Every task has an input and (generated by task) output.
 * There is an env variable with all environment variables.
 * Args are populated before executing the task.
 */
public abstract class Task {

  protected String stdin = "";
  protected String stdout = "";
  protected Map<String, String> env;
  protected String[] args = new String[0];

  public String getOutput() {
    return stdout;
  }

  /**
   * Attach an input stream and env to the task.
   * @param i input stream
   * @param env environment variables
   */
  public void attach(String i, Map<String, String> env) {
    this.stdin = i;
    this.env = env;
  }

  /**
   * Set arguments (without command name).
   * @param args possibly empty array of arguments
   */
  public void setArgs(String[] args) {
    this.args = args;
  }

  /**
   * Run the task.
   * @return exit status code
   */
  public abstract int exec();

}
